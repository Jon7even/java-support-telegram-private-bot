server:
  port: ${SERVER_PORT_DISPATCHER}

localeTag: ${LOCALE_TAG}

logging:
  level:
    com:
      github:
        jon7even: DEBUG
    org:
      springframework:
        orm:
          jpa: INFO
          JpaTransactionManager: DEBUG
        transaction: INFO
      hibernate:
        SQL: DEBUG
        type.descriptor:
          sql:
            BasicBinder: TRACE

# Configuration for the 'ci' profile
supportbot:
  name: ${TELEGRAM_BOT_NAME_PROD}
  token: ${TELEGRAM_BOT_PASS_PROD}

securitybot:
  keyPass: ${SECURITY_KEY_PASS_BOT_PROD}
  attemptsAuth: ${SECURITY_ATTEMPTS_AUTH_PROD}

spring:
  config:
    activate:
      on-profile: ci

  liquibase:
    enabled: true

  main:
    banner-mode: off

  output:
    ansi:
      enabled: ALWAYS

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true
    open-in-view: false

  rabbitmq:
    host: ${RABBIT_IP}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USER}
    password: ${RABBIT_PASS}

  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}

---
# Configuration for the 'test' profile
supportbot:
  name: ${TELEGRAM_BOT_NAME_TEST}
  token: ${TELEGRAM_BOT_PASS_TEST}

securitybot:
  keyPass: ${SECURITY_KEY_PASS_BOT_TEST}
  attemptsAuth: ${SECURITY_ATTEMPTS_AUTH_TEST}

spring:
  config:
    activate:
      on-profile: test

  liquibase:
    enabled: true

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true
    open-in-view: false

  main:
    banner-mode: off

  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:mainserver
    username: test
    password: test