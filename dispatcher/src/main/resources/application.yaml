server:
  port: ${SERVER_EXTERNAL_PORT_DISPATCHER}

localeTag: ${LOCALE_TAG}

logging:
  level:
    com:
      github:
        jon7even: DEBUG
    org:
      springframework:
        orm:
          jpa: INFO
          JpaTransactionManager: DEBUG
        transaction: INFO
      hibernate:
        SQL: DEBUG
        type.descriptor:
          sql:
            BasicBinder: TRACE

info:
  app:
    name: "Dispatcher Service"
    description: "Service for handle message from Telegram"

# Configuration for the 'ci' profile
bot:
  token:
    name: ${TELEGRAM_BOT_NAME_PROD}
    token: ${TELEGRAM_BOT_PASS_PROD}
  security:
    keyPass: ${SECURITY_KEY_PASS_BOT_PROD}
    attemptsAuth: ${SECURITY_ATTEMPTS_AUTH_PROD}

spring:
  application:
    name: dispatcher

  config:
    activate:
      on-profile: ci

  liquibase:
    enabled: true
    liquibase-schema: public
    default-schema: ${SCHEMA_APP}
    change-log: classpath:db/changelog/changelog-master.xml

  main:
    banner-mode: off

  output:
    ansi:
      enabled: ALWAYS

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        default-schema: ${SCHEMA_APP}
    open-in-view: false

  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_AMQP_PORT_LOCAL}
    username: ${RABBIT_USER}
    password: ${RABBIT_PASS}

  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT_LOCAL}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      schema: ${SCHEMA_APP}
      connection-timeout: 27777
      maximum-pool-size: 17
      minimum-idle: 4
      idle-timeout: 27777
      max-lifetime: 1777
      connection-test-timeout: 4777
      pool-name: DispatcherPoolCi
      validation-timeout: 4777
      leak-detection-threshold: 2777